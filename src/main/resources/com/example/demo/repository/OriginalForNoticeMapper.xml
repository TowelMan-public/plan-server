<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.OriginalForNoticeMapper">
	<resultMap id="ProjectBaseResultMap" type="com.example.demo.entity.SubscriberInPublicProjectEntity">
	    <id column="public_project_id" jdbcType="INTEGER" property="publicProjectId" />
	    <result column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="authority_id" jdbcType="INTEGER" property="authorityId" />
    </resultMap>
    
    <resultMap id="TodoBaseResultMap" type="com.example.demo.entity.TodoOnResponsibleEntity">
	    <id column="todo_on_responsible_id" jdbcType="INTEGER" property="todoOnResponsibleId" />
	    <result column="todo_on_project_id" jdbcType="INTEGER" property="todoOnProjectId" />
	    <result column="project_id" jdbcType="INTEGER" property="projectId" />
	    <result column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="is_completed" jdbcType="BIT" property="isCompleted" />
	    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    </resultMap>
    
    <select id="getApproachingPubliceriodProject" resultMap="ProjectBaseResultMap">
		SELECT * FROM subscriber_in_public_project AS body_table
		INNER JOIN
			(
				SELECT * FROM user_config
				WHERE before_deadline_for_project_notice > 0
			) AS user_table
			USING(user_id)
		INNER JOIN 
			(
				SELECT * FROM public_project
				WHERE
			  		is_deleted = false
			      AND
			  		is_completed = false
			) AS project_table
			USING(public_project_id) 
		WHERE
		  	project_table.finish_date &lt;= #{nowRunDate} + INTERVAL user_table.before_deadline_for_project_notice SECOND
		  AND
		  	project_table.finish_date > #{lastRunDate} + INTERVAL user_table.before_deadline_for_project_notice SECOND
		  
	</select>
	
	<select id="getDealyPeriodPublicProject" resultMap="ProjectBaseResultMap">
		SELECT * FROM subscriber_in_public_project AS body_table
		INNER JOIN
			(
				SELECT * FROM user_config
				WHERE before_deadline_for_project_notice > 0
			) AS user_table
			USING(user_id)
		INNER JOIN 
			(
				SELECT * FROM public_project
				WHERE
			  		is_deleted = false
			      AND
			  		is_completed = false
			) AS project_table
		WHERE
		  	project_table.finish_date &lt;= #{nowRunDate}
		  AND
		  	project_table.finish_date > #{lastRunDate}
	</select>
	
	<select id="getApproachingPeriodTodo" resultMap="TodoBaseResultMap">
		SELECT * FROM todo_on_responsible AS body_table
		INNER JOIN
			(
				SELECT * FROM user_config
				WHERE before_deadline_for_project_notice > 0
			) AS user_table
			USING(user_id)
		INNER JOIN 
			(
				SELECT * FROM todo_on_project
				WHERE
					is_deleted = false
				  AND
				  	is_completed = false
			) AS todo_table
			USING(todo_on_project_id) 
		WHERE
		  AND
		  	todo_table.finish_date &lt;= #{nowRunDate} + INTERVAL user_table.befor_deadline_for_todo_notice SECOND
		  AND
		  	todo_table.finish_date > #{lastRunDate} + INTERVAL user_table.befor_deadline_for_todo_notice SECOND
	</select>
	
	<select id="getDealyPeriodTodo" resultMap="TodoBaseResultMap">
		SELECT * FROM todo_on_responsible AS body_table
		INNER JOIN
			(
				SELECT * FROM user_config
				WHERE before_deadline_for_project_notice > 0
			) AS user_table
			USING(user_id)
		INNER JOIN 
			(
				SELECT * FROM todo_on_project
				WHERE
					is_deleted = false
				  AND
				  	is_completed = false
			) AS todo_table
			USING(todo_on_project_id) 
		WHERE
		  AND
		  	todo_table.finish_date &lt;= #{nowRunDate}
		  AND
		  	todo_table.finish_date > #{lastRunDate}
	</select>
	
	<select id="getStartedTodo" resultMap="TodoBaseResultMap">
		SELECT * FROM todo_on_responsible AS body_table
		INNER JOIN
			(
				SELECT * FROM user_config
				WHERE before_deadline_for_project_notice > 0
			) AS user_table
			USING(user_id)
		INNER JOIN 
			(
				SELECT * FROM todo_on_project
				WHERE
					is_deleted = false
				  AND
				  	is_completed = false
			) AS todo_table
			USING(todo_on_project_id) 
		WHERE
		  AND
		  	todo_table.start_date &lt;= #{nowRunDate}
		  AND
		  	todo_table.start_date > #{lastRunDate}
	</select>
	
	<delete id="deletePublicProjectNoticeAuto">
		DELETE delete_table FROM notice_project AS delete_table
		INNER JOIN(
			(
	            SELECT notice_table.notice_id FROM notice AS notice_table	
	                RIGHT JOIN (
	                        SELECT * FROM subscriber_in_public_project
	                    )AS user_in_project_table
	                    USING(user_id)	
	                WHERE
	                    notice_table.user_id IS NULL
			)UNION(
	            SELECT notice_table.notice_id FROM notice_project AS notice_table
	                INNER JOIN public_project AS project_table
	                    ON notice_table.project_id = project_table.public_project_id		
	                WHERE
	                    project_table.is_deleted = true
			)
		)AS former_table
		USING(notice_id)
	</delete>
	
	<delete id="deleteTodoNotice">
		DELETE delete_table FROM notice_todo AS delete_table
		(
			INNER JOIN notice AS notice_table
				USING(notice_id)
			LEFT JOIN (
				SELECT user_id FROM todo_on_responsible
		  		WHERE
		  			notice_table.user_id = todo_on_responsible.user_id
		  		  AND
		  		  	todo_on_responsible.is_deleted = false
			) AS user_in_todo_table		
				ON notice_table.user_id = user_in_todo_table.user_id
			WHERE
			   	user_in_todo_table.user_id IS NULL
		)UNION(
			INNER JOIN(
					SELECT * FROM todo_on_project
					WHERE is_deleted = true
				) AS todo_table
				ON delete_table.todo_id = todo_table.todo_on_project_id
		)
	</delete>
	
	<delete id="deleteUnNeededNotice">
		DELETE delete_table FROM unsend_notice AS delete_table
		INNER JOIN notice AS notice_table
			USING(notice_id)	
		LEFT JOIN (
			ELECT * FROM notice_project
			WHERE delete_table.notice_id = notice_project.notice_id
		) AS notice_project_table
			ON delete_table.notice_id = notice_project_table.notice_id			
		LEFT JOIN (
			ELECT * FROM notice_todo
			WHERE delete_table.notice_id = notice_todo.notice_id
		) AS notice_todo_table
			ON delete_table.notice_id = notice_todo_table.notice_id			
		WHERE
			notice_project_table.notice_id IS NULL
		  AND
		  	notice_todo_table.notice_id IS NULL
	</delete>
	
	<delete id="deleteNoticeParent">
		DELETE delete_table FROM notice AS delete_table
		INNER JOIN users AS user_table
			USING(user_id)			
		LEFT JOIN (
			SELECT * FROM notice
			WHERE delete_table.notice_id = notice.notice_id
		) AS notice_table
			ON delete_table.notice_id = notice_table.notice_id			
		WHERE
			notice_table.notice_id IS NULL
	</delete>
</mapper>